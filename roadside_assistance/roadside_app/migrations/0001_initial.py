# Generated by Django 5.1.4 on 2025-03-18 19:22

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Bill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.CharField(max_length=255)),
                ('service_provider', models.CharField(max_length=255)),
                ('service_type', models.CharField(max_length=255)),
                ('charge', models.DecimalField(decimal_places=2, max_digits=10)),
                ('kilometers', models.DecimalField(decimal_places=2, max_digits=10)),
                ('additional_charge', models.DecimalField(decimal_places=2, max_digits=10)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('paid', 'Paid'), ('pending', 'Pending'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='ServiceType',
            fields=[
                ('servicetype_id', models.AutoField(primary_key=True, serialize=False)),
                ('servicetype_name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='service_types/')),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(max_length=30, unique=True)),
                ('name', models.CharField(max_length=200)),
                ('phone', models.CharField(max_length=15)),
                ('address', models.CharField(max_length=255)),
                ('email', models.EmailField(db_index=True, max_length=150)),
                ('role', models.CharField(choices=[('user', 'User'), ('service_provider', 'Service Provider')], max_length=20)),
                ('password', models.CharField(max_length=128)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, related_name='customuser_set', to='auth.group')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='customuser_set', to='auth.permission')),
            ],
            options={
                'verbose_name': 'Custom User',
                'verbose_name_plural': 'Custom Users',
                'permissions': [],
            },
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(max_length=255)),
                ('service_provider_location', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('accepted', 'Accepted'), ('ongoing', 'Ongoing'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Incident',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('incident_type', models.CharField(choices=[('accident', 'Accident'), ('theft', 'Theft'), ('damage', 'Damage'), ('other', 'Other')], max_length=20)),
                ('location', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('image', models.ImageField(blank=True, null=True, upload_to='incident_images/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='incidents', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ServiceProvider',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('certificate', models.ImageField(upload_to='certificates/')),
                ('area_of_service', models.CharField(max_length=255)),
                ('location', models.TextField(default='')),
                ('availability_status', models.BooleanField(default=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('service_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='roadside_app.servicetype')),
            ],
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feedback_text', models.TextField()),
                ('rating', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('booking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feedback', to='roadside_app.booking')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feedbacks_given', to=settings.AUTH_USER_MODEL)),
                ('service_provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feedbacks_received', to='roadside_app.serviceprovider')),
            ],
        ),
        migrations.AddField(
            model_name='booking',
            name='service_provider',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='roadside_app.serviceprovider'),
        ),
        migrations.CreateModel(
            name='ServiceTypeCategory',
            fields=[
                ('category_id', models.AutoField(primary_key=True, serialize=False)),
                ('category_name', models.CharField(max_length=100)),
                ('charge', models.CharField(blank=True, max_length=50, null=True)),
                ('service_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='categories', to='roadside_app.servicetype')),
            ],
            options={
                'verbose_name_plural': 'Service Type Categories',
            },
        ),
        migrations.AddField(
            model_name='booking',
            name='service_type_category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='roadside_app.servicetypecategory'),
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('registration_number', models.CharField(max_length=20)),
                ('model', models.CharField(max_length=50)),
                ('road_tax_document', models.FileField(blank=True, null=True, upload_to='documents/tax/')),
                ('insurance_document', models.FileField(blank=True, null=True, upload_to='documents/insurance/')),
                ('pollution_certificate_document', models.FileField(blank=True, null=True, upload_to='documents/pollution/')),
                ('tax_expiry_date', models.DateField(blank=True, null=True)),
                ('insurance_expiry_date', models.DateField(blank=True, null=True)),
                ('pollution_expiry_date', models.DateField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
